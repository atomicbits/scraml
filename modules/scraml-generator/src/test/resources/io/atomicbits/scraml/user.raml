
/:
  get:
    queryParameters:
      age:
        description: The age of the user.
        type: number
      firstName:
        description: The firstname of the user.
        type: string
      lastName:
        description: The last name of the user.
        type: string
      organization:
        description: The organization of the user.
        type: string
        repeat: true
    responses:
      200:
        body:
          application/vnd-v1.0+json:
            schema: user

/upload:
  post:
    body:
      multipart/form-data:
    responses:
      200:
        body:


/{userid}:
  uriParameters:
    userid:
      description: The user's id.
      type: string
      required: true
  get:
    queryParameters:
      age:
        description: The age of the user.
        type: number
      firstName:
        description: The firstname of the user.
        type: string
      lastName:
        description: The last name of the user.
        type: string
    responses:
      200:
        body:
          application/vnd-v1.0+json:
            schema: user
          application/vnd-v0.1+json:
            schema: animal
  post:
    body:
      application/x-www-form-urlencoded:
        formParameters:
          text:
            description: Text to post as a comment on the user.
            type: string
            required: true
          value:
            description: Value to give to a user.
            type: integer
            required: false
    responses:
      200:
        body:
  delete:
  put:
    body:
      application/vnd-v1.0+json:
        schema: user
      application/vnd-v0.1+json:
        schema: animal
    responses:
      200:
        body:
          application/vnd-v1.0+json:
            schema: link


/{userid}/dogs:
  uriParameters:
    userid:
      description: The user's id.
      type: string
      required: true
  get:
    responses:
      200:
        body:
          application/vnd-v1.0+json:
            schema: |
              {
                "id": "http://atomicbits.io/schema/anonymous3.json",
                "$ref": "http://atomicbits.io/schema/paged-list.json#",
                "genericTypes": {
                  "T": {
                    "$ref": "http://atomicbits.io/schema/dog.json"
                  },
                  "U": {
                    "type": "string"
                  }
                }
              }

#  description: todo support for anonymous schema id's for non-object schema's, List[] support in body and result directly
#  description: todo testing primitives as request & response bodies

/activate:
  put:
    body:
      application/vnd-v1.0+json:
        schema: |
          {
            "id": "http://atomicbits.io/schema/anonymous1.json",
            "type": "array",
            "items": {
              "$ref": "user.json"
            }
          }
    responses:
      200:
        body:
          application/vnd-v1.0+json:
            schema: |
              {
                "id": "http://atomicbits.io/schema/anonymous2.json",
                "type": "array",
                "items": {
                  "$ref": "user.json"
                }
              }
